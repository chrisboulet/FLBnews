#!/usr/bin/env python3
"""
Test rapide pour g√©n√©rer un bulletin avec seulement quelques sources
pour v√©rifier que la traduction fonctionne
"""

import sys
import os
sys.path.insert(0, 'src')

import config
from main import FLBNewsApp
import logging

# Configurer les logs
logging.basicConfig(level=logging.INFO, format='%(message)s')

# R√©duire temporairement les sources pour un test rapide
config.NEWS_SOURCES = {
    'Canadian Grocer': config.NEWS_SOURCES['Canadian Grocer'],
    'Western Grocer': config.NEWS_SOURCES['Western Grocer'],
    'Le Bulletin des Agriculteurs': config.NEWS_SOURCES['Le Bulletin des Agriculteurs']
}

# S'assurer que l'analyse est activ√©e
config.ANALYSIS_CONFIG['enable_bm25'] = True
config.ANALYSIS_CONFIG['mode'] = 'economique'

# R√©duire le nombre de jours pour aller plus vite
config.BULLETIN_CONFIG['days_to_scrape'] = 3

print("üöÄ Test rapide de g√©n√©ration de bulletin avec traduction")
print("="*60)
print("Sources test√©es:")
for source in config.NEWS_SOURCES.keys():
    print(f"  - {source}")
print("="*60)

app = FLBNewsApp()
result = app.run_bulletin_generation()

if result:
    print(f"\n‚úÖ Bulletin g√©n√©r√© avec succ√®s!")
    print(f"üìÑ Fichier: {result['path']}")
    print(f"üìä Articles: {len(result['news_items'])}")
    
    print("\nüì∞ Articles s√©lectionn√©s:")
    print("-"*40)
    for item in result['news_items']:
        print(f"\n[{item.source}]")
        print(f"Titre: {item.title[:80]}")
        
        # V√©rifier si c'est traduit pour les sources anglaises
        if item.source in ['Canadian Grocer', 'Western Grocer']:
            if any(word in item.title.lower() for word in ['le', 'la', 'les', 'de', 'du', 'des']):
                print("‚úÖ Traduit en fran√ßais")
            else:
                print("‚ö†Ô∏è Peut-√™tre non traduit")
else:
    print("‚ùå Erreur lors de la g√©n√©ration")